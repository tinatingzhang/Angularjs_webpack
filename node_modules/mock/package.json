{
  "_args": [
    [
      {
        "raw": "mock",
        "scope": null,
        "escapedName": "mock",
        "name": "mock",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "D:\\zt 基础项目\\angular1"
    ]
  ],
  "_from": "mock@latest",
  "_id": "mock@0.1.1",
  "_inCache": true,
  "_location": "/mock",
  "_npmUser": {
    "name": "raynos",
    "email": "raynos2@gmail.com"
  },
  "_npmVersion": "1.2.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "mock",
    "scope": null,
    "escapedName": "mock",
    "name": "mock",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/mock/-/mock-0.1.1.tgz",
  "_shasum": "e7e3589c7e6b3376d69f5a3e470b56604417c633",
  "_shrinkwrap": null,
  "_spec": "mock",
  "_where": "D:\\zt 基础项目\\angular1",
  "author": {
    "name": "Raynos",
    "email": "raynos2@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/Colingo/mock/issues",
    "email": "raynos2@gmail.com"
  },
  "contributors": [
    {
      "name": "Raynos"
    }
  ],
  "dependencies": {},
  "description": "Load a module with it's require's mocked out",
  "devDependencies": {
    "browserify": "https://github.com/raynos/node-browserify/tarball/master",
    "tape": "~0.2.2",
    "testem": "~0.2.52"
  },
  "directories": {},
  "dist": {
    "shasum": "e7e3589c7e6b3376d69f5a3e470b56604417c633",
    "tarball": "https://registry.npmjs.org/mock/-/mock-0.1.1.tgz"
  },
  "homepage": "https://github.com/Colingo/mock",
  "keywords": [],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/Colingo/mock/raw/master/LICENSE"
    }
  ],
  "main": "index",
  "maintainers": [
    {
      "name": "raynos",
      "email": "raynos2@gmail.com"
    }
  ],
  "name": "mock",
  "optionalDependencies": {},
  "readme": "# mock\n\n[![build status][1]][2]\n\n[![browser support][3]][4]\n\nLoad a module with it's require's mocked out\n\nWorks in both node and browserify\n\n## Example\n\n```js\nvar realB = require(\"./fixtures/b\")\n\nvar b = mock(\"./fixtures/b\", {\n    fs: {\n        readFileSync: function (uri) {\n            if (uri === \"clowns.txt\") {\n                return \"some clowns\"\n            }\n        }\n    }\n    , \"./fixtures/c\": null\n    , \"./fixtures/a\": function () {\n        return 42\n    }\n}, require)\n\n// use b. It's reference to fs and fixtures/a have been replaced with\n// your passed objects\n```\n\nLimitations:\n\n - You have to require the thing your mocking out or browserify\n    won't load it and all it's dependencies into the bundle.\n - When you set a dependency to null your saying don't overload\n    that dependency with this value, but do nuke it from the cache.\n    This is useful when you want to mock out something ./fixtures/c\n    depends on but not touch the implementation of ./fixtures/c\n\n## Installation\n\n`npm install mock`\n\n## Contributors\n\n - Raynos\n\n## MIT Licenced\n\n  [1]: https://secure.travis-ci.org/Colingo/mock.png\n  [2]: http://travis-ci.org/Colingo/mock\n  [3]: http://ci.testling.com/Colingo/mock.png\n  [4]: http://ci.testling.com/Colingo/mock\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/Colingo/mock.git"
  },
  "scripts": {
    "build": "browserify test/index.js -o test/static/bundle.js",
    "test": "node ./test",
    "testem": "testem"
  },
  "testling": {
    "files": "test/*.js",
    "browsers": {
      "ie": [
        "8",
        "9",
        "10"
      ],
      "firefox": [
        "16",
        "17",
        "nightly"
      ],
      "chrome": [
        "22",
        "23",
        "canary"
      ],
      "opera": [
        "12",
        "next"
      ],
      "safari": [
        "5.1"
      ]
    }
  },
  "version": "0.1.1"
}
